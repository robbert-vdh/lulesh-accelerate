# vim: nospell
#
# Basic template to test with GHC=[7.8, 7.10, 8.0], but also installs the
# relevant version of LLVM as (a very old version of) the CUDA toolkit (4.0).
# Caches the 'stack' build directory to speed subsequent compilations.
#
language: minimal
dist: trusty

cache:
  directories:
    - $HOME/.stack/snapshots
    - $HOME/.local/bin
    - .stack-work/install

# before_cache:
#   - rm -rf $(stack path --local-install-root)/bin/lulesh-accelerate
#   - rm -rf $(stack path --local-install-root)/doc

matrix:
  apt:
    sources: &apt_sources
      - hvr-ghc
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty
    packages: &apt_packages
      - alex-3.1.4
      - dpkg
      - g++-8
      - gcc-8
      - happy-1.19.5
      - libgmp-dev
      - libhdf5-openmpi-dev
      - libsilo-dev
      - libsiloh5-0

  include:
    - env: GHC=8.6.4 LLVM=7.0.1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev

    - env: GHC=8.4.3 LLVM=6.0.1
      compiler: "GHC 8.4"
      addons:
        apt:
          sources: *apt_sources
          packages:
            - *apt_packages
            - llvm-6.0-dev

    - env: GHC=8.2.2 LLVM-5.0.2
      compiler: "GHC 8.2"
      addons:
        apt:
          sources: *apt_sources
          packages:
            - *apt_packages
            - llvm-5.0-dev

  fast_finish: true

before_install:
  - export PATH=/opt/alex/3.1.4/bin:/opt/happy/1.19.5/bin:$PATH
  - source .travis/install-stack.sh

  # llvm-hs requires new g++
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8

  # ghc-8.4+ require libffi7
  - echo "deb http://deb.debian.org/debian experimental main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 0x7638D0442B90D010 0x8B48AD6246925553 0x04EE7237B7D453EC
  - sudo apt-get install debian-archive-keyring
  - sudo apt-get update
  - sudo apt-get install libffi7

  # build environment
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - stack --version
  - llc-${LLVM:0:3} --version; true
  - opt-${LLVM:0:3} --version; true

install:
  # how much do we have to do?
  - export FLAGS="--fast --jobs=2 --no-terminal --no-copy-bins --flag lulesh-accelerate:-llvm-gpu --flag lulesh-accelerate:visit"
  - stack build $FLAGS --only-dependencies --dry-run

  # build dependencies
  - travis_retry travis_wait 60 stack build $FLAGS --only-dependencies

script:
  - stack build $FLAGS

after_success:
  - source .travis/update-accelerate-buildbot.sh

