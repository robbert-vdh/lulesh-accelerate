name:                   lulesh-accelerate
version:                0.1.0.0
synopsis:               Accelerate implementation of LULESH
description:
    Implementation of the Livermore Unstructured Lagrangian Explicit Shock
    Hydronamics (LULESH) application using Accelerate.
    .
    LULESH represents a typical hydrodynamics code such as
    <https://wci.llnl.gov/simulation/computer-codes/ale3d ALE3D>, but is a
    highly simplified application, hard-coded to solve the Sedov blast problem
    on an unstructured hexahedron mesh. For more information on what LULESH
    models see:
    .
      <https://codesign.llnl.gov/lulesh.php>
    .
      <<https://codesign.llnl.gov/images/ale3d.gif>>

homepage:               https://github.com/AccelerateHS/accelerate/
license:                BSD3
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             tmcdonell@cse.unsw.edu.au
copyright:              Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
-- category:
build-type:             Simple
extra-doc-files:        images/nodes.png
cabal-version:          >=1.10

-- Flag cuda
--   Description:          Enable the CUDA parallel backend for NVIDIA GPUs
--   Default:              False

Flag llvm-cpu
  Description:          Enable the LLVM backend for multicore CPUs
  Default:              True

Flag llvm-gpu
  Description:          Enable the LLVM backend for NVIDIA CPUs
  Default:              True

Flag visit
  Description:          Enable writing output files suitable for visualisation
  Default:              False


Executable lulesh-accelerate
  hs-source-dirs:       src
  main-is:              Main.hs
  other-modules:        Backend Domain Init LULESH Options Timing Type Util VisIt

  ghc-options:
        -Wall
        -O2
        -threaded
        -rtsopts
        -with-rtsopts=-n2M
        -with-rtsopts=-A64M
        -feager-blackholing

  if impl(ghc >= 8.0)
    ghc-options:        -freduction-depth=30
  else
    ghc-options:        -fcontext-stack=30

  default-language:     Haskell2010
  build-depends:
      base                      >= 4.6 && < 5
    , accelerate                >= 1.0
    , ansi-wl-pprint            >= 0.6
    , lens                      >= 4
    , lens-accelerate           >= 0.1
    , linear-accelerate         >= 0.3
    , time                      >= 1.4

  -- if flag(cuda)
  --   cpp-options:        -DACCELERATE_CUDA_BACKEND
  --   build-depends:
  --       accelerate-cuda         >= 0.15

  if flag(llvm-cpu)
    cpp-options:        -DACCELERATE_LLVM_NATIVE_BACKEND
    build-depends:
        accelerate-llvm-native  >= 1.1.0.0

    -- A GHC bug prevents us from running the plugin when visit is enabled:
    --
    -- > ghc: panic! (the 'impossible' happened)
    -- >   (GHC version 7.10.3 for x86_64-unknown-linux):
    -- >        Loading temp shared object failed: /tmp/ghc19665_0/libghc_6.so: undefined symbol: Silo_version_4_10_2
    --
    if impl(ghc >= 8.0)
      ghc-options:      -fplugin=Data.Array.Accelerate.LLVM.Native.Plugin

  if flag(llvm-gpu)
    cpp-options:        -DACCELERATE_LLVM_PTX_BACKEND
    build-depends:
        accelerate-llvm-ptx     >= 1.1.0.0

  if flag(visit)
    cpp-options:        -DACCELERATE_VISIT
    cc-options:         -fPIC
    c-sources:          cbits/visit.cc
    extra-libraries:    siloh5 hdf5_serial

-- vim: nospell
